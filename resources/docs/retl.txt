TODO:
- Implement builtin functions
- Fix list concat
- Fix minus sign
- Ending type-info
- Fix error logging during interpreter phase
- Finish type-aliasing implementation


Possible features?
- Parallel keyword
- Tuple deconstruction
- lazy evaluation
- string interpolation
- as keyword


FEATURES:
1. lambdas only (DONE)
2. basic arithmetic (DONE)
3. ints, strings, chars, bools, lists, dicts, tuples, schemas (DONE)
- type inference (DONE)
- range operator .. (DONE)
4. basic pattern matching (DONE)
- match by type: {name}: {type}
- multi-choice: |
- range: ..
- predicates
5. if/else (DONE)
6. builtin-functions for ETL, functions passed in are denoted code-blocks:
- read stdin (TODO)
- read csv (TODO)
- output csv (TODO)
- output stdout (TODO)
- map (TODO)
- filter (TODO)
- zip (TODO)
- foldl (TODO)
- foldr (TODO)
- foreach (TODO)
- range (TODO)
7. collection operators
- list append operator: ++ (TODO)
- list/dict access operator: () (application) (DONE)
- tuple access operator: . (DONE)
8. REPL (DONE)
- args:
     * retl <-d> => run the Retl REPL, optional debug mode
     * retl <-d> <-f> <file_name> => optional debug mode, run file
- steps:
    1. read strings, multi-line denoted by \
    2. scan, parse, type check with environment from REPL
    3. run new code
    4. add to env
10. strong, dynamic typing (DONE)

Structure:
ReplRunner
Logger
Scanner
- File Position
Parser
Types (impl Type)
Values (impl Value)
Interpreter

Key characters:
: - denote type
-> - lambda return type
= - assignment, function block start
\ - extend newline
; - end statement
.. - range
+, -, *, /, % = arithmetic ops
>, <, >=, <=, ==, not, and, or - boolean operators
{ - start code block
} - end code block
[ - start list/dict, list/dict access
] - end list/dict, list/dict access
++ - list, dict, tuple concat
( - tuple start
) - tuple end
. - tuple access
, - list, tuple, dict element separator
| - multi-pattern, start of lambda signature, end of lambda signature
_ - catch-all case
=> - case expression
|> - bird operator, chain function calls


Keywords:
let
int
bool
char
string
null
list
dict
tuple
schema
true
false
and
or
if
else
match
case

readln
readCSV
writeCSV
print
println
map
filter
zip
foldl
foldr
foreach
range