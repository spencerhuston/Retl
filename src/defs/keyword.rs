pub enum Keyword {
    Let,
    Int,
    Bool,
    Char,
    String,
    List,
    Dict,
    Tuple,
    Schema,
    True,
    False,
    Parallel,
    If,
    Else,
    Match,
    Case,
    Readln,
    ReadCSV,
    WriteCSV,
    Print,
    Println,
    Map,
    Filter,
    Zip,
    Foldl,
    Foldr,
    Foreach,
    Range
}

impl Keyword {
    fn val(&self) -> &'static str {
        match self {
            Keyword::Let => "let",
            Keyword::Int => "int",
            Keyword::Bool => "bool",
            Keyword::Char => "char",
            Keyword::String => "string",
            Keyword::List => "list",
            Keyword::Dict => "dict",
            Keyword::Tuple => "tuple",
            Keyword::Schema => "schema",
            Keyword::True => "true",
            Keyword::False => "false",
            Keyword::Parallel => "parallel",
            Keyword::If => "if",
            Keyword::Else => "else",
            Keyword::Match => "match",
            Keyword::Case => "case",
            Keyword::Readln => "readln",
            Keyword::ReadCSV => "readCSV",
            Keyword::WriteCSV => "writeCSV",
            Keyword::Print => "print",
            Keyword::Println => "println",
            Keyword::Map => "map",
            Keyword::Filter => "filter",
            Keyword::Zip => "zip",
            Keyword::Foldl => "foldl",
            Keyword::Foldr => "foldr",
            Keyword::Foreach => "foreach",
            Keyword::Range => "range"
        }
    }
}